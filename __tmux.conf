# _tmux.conf
#
# Tmux configuration of the Forgetful
#
# By: Noel Quintos
#
# Derived from: Jeremy Mack's tmux.config
# Found: On the internet
# Cobbled: Together

# ------------------------
# Bindings
# ------------------------
# Make sure we're running with 256 colors
set -g default-terminal "screen-256color"

# remap prefix to ` (backtick) because Control + b is being used by vim and Control + a, which is preferred by most, is hard to type.
set -g prefix `
# meanwhile, allow ` to be typed as well
bind ` send-prefix
unbind C-b

# set status line background to dark green and foreground to white
set -g status-fg white
set -g status-bg colour33

set -g history-limit 100000

# Reload tmux.conf on the fly
unbind r
bind r source-file ~/.tmux.conf \; display-message "Tmux Config Reloaded"

# Message displays should last for 2 seconds
set -g display-time 2000

# prompt for a window name when new window is created
bind-key c command-prompt -p "Name of new window: " "new-window -n '%%'"

# move through windows with ESC-p

# -------------------------------------------------------
# Smart pane switching with awareness of vim splits
# from: https://github.com/christoomey/vim-tmux-navigator
# -------------------------------------------------------
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Resize panes with Alt+movement keys but make it work
# for both tmux and vim
bind -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R"

# Zoom pane to full screen
bind -n M-z if-shell "$is_vim" "send-keys M-z" "resize-pane -Z"

# Next / Previous Window - make it consistent with vim
bind -n M-n if-shell "$is_vim" "send-keys M-n" "next-window"
bind -n M-p if-shell "$is_vim" "send-keys M-p" "previous-window"
bind n next-window
bind p previous-window

#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# vim keys in copy and choose mode
set-window-option -g mode-keys vi
unbind p
unbind v
unbind V
set -g set-clipboard off
set -g mouse on

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
# bind-key Escape copy-mode			# enter copy mode; default [
# bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"
    
# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"

# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# vim copy mode rebinds for (tmux 2.4+)
# https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
# https://github.com/tmux/tmux/issues/754#issuecomment-303156000
# https://stackoverflow.com/a/40902312
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
      'bind-key -T copy-mode-vi v send-keys -X begin-selection; \
      bind-key -T copy-mode-vi V send-keys -X select-line; \
      bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
      bind-key -T choice-mode-vi h send-keys -X tree-collapse ; \
      bind-key -T choice-mode-vi l send-keys -X tree-expand ; \
      bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ; \
      bind-key -T choice-mode-vi L send-keys -X tree-expand-all ; \
      bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"; \
      bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"'
    
    # vim copy mode rebinds for (tmux 2.3 or lower)
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
      'bind-key -t vi-copy v begin-selection; \
      bind-key -t vi-copy V select-line; \
      bind-key -t vi-copy C-v rectangle-toggle; \
      bind-key -t vi-choice h tree-collapse; \
      bind-key -t vi-choice l tree-expand; \
      bind-key -t vi-choice H tree-collapse-all; \
      bind-key -t vi-choice L tree-expand-all; \
      bind-key -t vi-copy y copy-pipe "xclip -in -selection clipboard"'

    #}}}


# make ESC faster in vim/nvim
set -sg escape-time 10

# split panes using \ and - (\ is easier to type than |, which requires <shift>)
bind-key \\ split-window -h
bind-key - split-window -v

# ---------------
# Change Sessions
# ---------------

# List
bind -n M-8 choose-session
# Previous
bind -n M-9 switch-client -p
# Next
bind -n M-0 switch-client -n

# No More Accidental Pane Killing
bind ^x kill-pane


# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Put this at the bottom of .tmux.conf:

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'seebi/tmux-colors-solarized'
# set -g @colors-solarized 'dark'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
